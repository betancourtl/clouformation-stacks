AWSTemplateFormatVersion: "2010-09-09"
Resources:
  # Networking
  VPC:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://cf-templates-g4ool1dn68hz-us-east-1.s3.amazonaws.com/components/VPC.yaml
  # Instances
  ALB:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://cf-templates-g4ool1dn68hz-us-east-1.s3.amazonaws.com/components/LoadBalancer.yaml
      Parameters:
        IpAddressType: ipv4
        Scheme: internet-facing
        SecurityGroups: !Join
          - ","
          - - !GetAtt VPC.Outputs.SecurityGroupEC2
        Subnets: !Join
          - ","
          - - !GetAtt VPC.Outputs.PublicSubnet1ID
            - !GetAtt VPC.Outputs.PublicSubnet2ID
            - !GetAtt VPC.Outputs.PublicSubnet3ID
        Type: application
  LoadBalancerListener:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://cf-templates-g4ool1dn68hz-us-east-1.s3.amazonaws.com/components/LoadBalancerListener.yaml
      Parameters:
        LoadBalancerArn: !GetAtt ALB.Outputs.Arn
        Port: 80
        Protocol: HTTP
        TargetGroupArn: !GetAtt TargetGroup.Outputs.TargetGroupArn
  TargetGroup:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://cf-templates-g4ool1dn68hz-us-east-1.s3.amazonaws.com/components/TargetGroup.yaml
      Parameters:
        HealthCheckEnabled: true
        HealthCheckIntervalSeconds: 30
        HealthCheckPath: /index.html
        HealthCheckPort: traffic-port
        HealthCheckProtocol: HTTP
        HealthCheckTimeoutSeconds: 5
        HealthyThresholdCount: 5
        MatcherHttpCode: 200
        Port: 80
        Protocol: HTTP
        TargetType: instance
        UnhealthyThresholdCount: 2
        VpcId: !GetAtt VPC.Outputs.VPCID
        Target1Id: !GetAtt EC2Instance1.Outputs.InstanceId
        Target1Port: 80
        Target2Id: !GetAtt EC2Instance2.Outputs.InstanceId
        Target2Port: 80
  EC2Instance1:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://cf-templates-g4ool1dn68hz-us-east-1.s3.amazonaws.com/components/EC2.yaml
      Parameters:
        UserData: s3://cf-templates-g4ool1dn68hz-us-east-1/stacks/dev/user-data-1.yaml
        SubnetId: !GetAtt VPC.Outputs.PublicSubnet1ID
        NameOfService: instance 1
        SecurityGroups: !Join
          - ","
          - - !GetAtt VPC.Outputs.SecurityGroupEC2
  EC2Instance2:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://cf-templates-g4ool1dn68hz-us-east-1.s3.amazonaws.com/components/EC2.yaml
      Parameters:
        UserData: s3://cf-templates-g4ool1dn68hz-us-east-1/stacks/dev/user-data-2.yaml
        SubnetId: !GetAtt VPC.Outputs.PublicSubnet1ID
        NameOfService: instance 2
        SecurityGroups: !Join
          - ","
          - - !GetAtt VPC.Outputs.SecurityGroupEC2
  # Database
  RDSSubnetGroup:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://cf-templates-g4ool1dn68hz-us-east-1.s3.amazonaws.com/components/DBSubnetGroup.yaml
      Parameters:
        DBSubnetGroupDescription: Private Database Subnet Group
        SubnetIds: !Join
          - ","
          - - !GetAtt VPC.Outputs.PrivateSubnet1ID
            - !GetAtt VPC.Outputs.PrivateSubnet2ID
            - !GetAtt VPC.Outputs.PrivateSubnet3ID
  SecretRDS:
    Type: "AWS::SecretsManager::Secret"
    Properties:
      Description: "This is a Secrets Manager secret for an RDS DB instance"
      GenerateSecretString:
        ExcludeNumbers: false
        ExcludePunctuation: true
        ExcludeUppercase: false
        GenerateStringKey: "password"
        IncludeSpace: false
        RequireEachIncludedType: true
        PasswordLength: 16
        SecretStringTemplate: '{"username": "admin"}'
  SecretRDSInstanceAttachment:
    Type: "AWS::SecretsManager::SecretTargetAttachment"
    Properties:
      SecretId: !Ref SecretRDS
      TargetId: !GetAtt RDSCluster.Outputs.ClusterIdentifier
      TargetType: AWS::RDS::DBCluster
  RDSCluster:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://cf-templates-g4ool1dn68hz-us-east-1.s3.amazonaws.com/components/RDSCluster.yaml
      Parameters:
        DBClusterIdentifier: aurora-mysql-cluster
        DBSubnetGroupName: !GetAtt RDSSubnetGroup.Outputs.DBSubnetGroupName
        EnableIAMDatabaseAuthentication: false
        Engine: aurora-mysql
        EngineMode: provisioned
        MasterUsername: !Join
          - ""
          - - "{{resolve:secretsmanager:"
            - !Ref SecretRDS
            - ":SecretString:username}}"
        MasterUserPassword: !Join
          - ""
          - - "{{resolve:secretsmanager:"
            - !Ref SecretRDS
            - ":SecretString:password}}"
        VpcSecurityGroupIds: !Join
          - ","
          - - !GetAtt VPC.Outputs.SecurityGroupDB
  RDSWritter:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://cf-templates-g4ool1dn68hz-us-east-1.s3.amazonaws.com/components/RDSDBInstance.yaml
      Parameters:
        DBClusterIdentifier: !GetAtt RDSCluster.Outputs.ClusterIdentifier
        DBInstanceIdentifier: aurora-mysql-instance1
        DBInstanceClass: db.t2.small
        DBSubnetGroupName: !GetAtt RDSSubnetGroup.Outputs.DBSubnetGroupName
        Engine: aurora-mysql
        MonitoringInterval: 0
        PubliclyAccessible: false
